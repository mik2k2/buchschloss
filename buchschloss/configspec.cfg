# This is the specfile for the Buchschloss configuration file
# It includes all needed keys (and defaults, if applicable)

debug = boolean(default=false)


# configuration for the core program
[core]

    # the directory containing DB, logs and other used files
    working directory = string

    # the name of the database file
    database name = string(default='buchschloss.sqlite')

    # iterations for PBKDF2. To make the hashes stronger (or faster) later,
    # insert the preferred number at the beginning. older hashes will automatically be updated at login
    hash iterations = int_list

    # Salt length for hashes in bytes. If it is changed,
    # the new length will be applied every time a password is changed
    salt length = integer(min=0)

    # the format dates are displayed in, see https://docs.python.org/3/library/datetime.html#datetime.date.strftime
    date format = string(default='%Y-%m-%d')

    # number of latest borrowers to save
    save latest borrowers = integer(min=0, default=10)

    # how long different levels may borrow books for
    # the index is the level, the value the max. number of weeks
    # a book may be borrowed for
    borrow time limit = list(min=5, max=5, default=list(0, 5, 7, 10, 20))


# configuration for utilities
[utils]

    # tasks can be performed one on startup or in a fixed interval
    # valid tasks are:
    #   - backup: local backups by copying the database
    #   - web_backup: remote backups with ftp
    #   - late_books: checks for late books
    [[tasks]]
        # recurring tasks
        recurring = task_list(default=list())
        # time between recurring tasks as <days>[:<hours>[:<minutes>]]
        repeat every = timedelta(default=1)
        # startup tasks
        startup = task_list(default=list())

        # how much time before a book must be returned before warning in late_books
        late books warn time = timedelta(default=3)

        # how many copies to retain (local/remote)
        backup depth = integer(min=1, default=1)
        web backup depth = integer(min=1, default=1)

    # for remote backups, FTP can be used
    # TODO: can I make sections optional?
    [[ftp]]
        # self-explaining
        host = string(default='')
        username = string(default='')
        password = string(default='')
        tls = boolean(default=None)

    # when errors occur, emails can be sent
    [[email]]
        # who has to deal with errors
        recipient = string
        # From: header
        from = string
        # TODO (not yet actually implemented)
        [[[smtp]]]
            host = string
            port = integer(1, 65535)

    # TODO: for end-user messages


# configuration for the gui2 user interface
[gui2]
    # shown on start
    [[intro]]
        # default: Buchschloss\n\nhttps://github.com/mik2k2/buchschloss
        text = string(default=None)
        font = string(default='Times 70')

    # default values for entry widgets
    [[entry defaults]]
        # TODO: get subsections? JSON?

    # font for normal use
    [[font]]
        family = string
        size = integer(min=1)

    [[info widget]]
        height = integer(min=1)
        width = integer(min=1)
        # length (chars) of displayed items
        item length = integer(min=1)
    [[search result widget]]
        height = integer(min=1)
        width = integer(min=1)
        # length (chars) of displayed items
        item length = integer(min=1)
